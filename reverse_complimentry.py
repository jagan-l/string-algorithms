'''
Given: A DNA string s of length at most 1000 bp.

Return: The reverse complement sc of s

Sample Dataset
AAAACCCGGT

Sample Output
ACCGGGTTTT

'''

s = "CTACGACTGAACCGTAACTGAGTCTGAACGTATTGACTAGAGTTCCCTCAGATGTCGGCGTTCCATAATCTGAAAATGACCGACCGCCAAGGAGAGAGCGGCCCTTGGCTGAAGCTTTCCTTACGGCACAGAACTGACTGACAGAGGGTTAGACAGAAGACCGCTTAGTTACAGACAGTTGGGTCTAGAATTATTTAGGCCCTTAGAGCGGACACGGCACACAGCTCCGCCGTTACGGGGCGATACCATTAACGACCAGCCGTCAACACGATGTTTCTTAGCAAGCCCCGAAATCAGAGAGTAGTTCCTATACCCATGATTCACTATCGGCTTTTTCCGTCGATCGTTAGTCCGTACTAGTACCTGCGAGTCGGGGGTCGTAGTTGCACGTAGCCGCCACGTTGATGAATAGAACTCATTGCGTCATTTGTCCCGGGCTTTAATGGTTTTAGGTTAACTTCACGGTCTTTGGGATGACAAAAATAGCCATCGAAGACTACGTGGTGCAGCACTATCGATGGTAGTCGTCCGTAAGATAATGATACCCATTACAGATGTACGCTTGAAACGCACCGCAGGTGATACTCACGCACTTGCTAGTGGTTTACTGAGGTCCATTAGGGCTCGCGCTTGCCTAGAAAAGTCCGAGGATGCCGGGGTCGCTTTACGCTGCACCGGATTAACCTAATGCAGGAGGTCAGTATGGTAAGAGGGACGATGCAAGAGGGGCTATAAACTCAATCACAATTGGGAGGAAGAAGCTCATTTAGAATCATATACCCCCGAGTTCTTCCATAAAGACGGCTACGTTGCACGCTCTCCCCAGGTAAGTAAATCTTGTAGCGCATCTATAGTAGACTCTGAATGTCAGGTATTCATGTGCGTCAGACCGCAACCCGACACACACGTTTAGCTCGCAAATGAGTCTCCCGGCGGTATCCGATTCCCCGCGATCTGCGATAGGTTTACCTTAATCGGCACC"

reverse_s = ""

for base in s:
    reverse_s = base + reverse_s

reverse_complement = ""

for base in reverse_s:
    if base == 'A':
        reverse_complement += 'T'
    elif base == 'T':
        reverse_complement += 'A'
    elif base == 'G':
        reverse_complement += 'C'
    elif base == 'C':
        reverse_complement += 'G'

print(reverse_complement)