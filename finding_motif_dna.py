'''
Given: Two DNA strings s and t (each of length at most 1 kbp).

Return: All locations of t as a substring of s

Sample Dataset
GATATATGCATATACTTATAT

Sample Output
2 4 10
'''
#inputs
dna = "CATTATCACTCTTTCACTCTAGGACCTTCACTCTGTCACTCTAATCACTCTTCACTCTGTCACTCTTCACTCTAGTAGATCACTCTTTCTCACTCTCTATGACCAGAGCACTCTCACTCTTTTCACTCTTTCACTCTAAGTTTCACTCTATCTCACTCTCGCATCAGGAGTCACTCTTCACTCTGCATCACTCTTCACTCTGTCACTCTGTCACTCTTGGTCACTCTTCACTCTCGCGGTCACTCTCTCACTCTTCACTCTATCACTCTAGTCACTCTACCTCACTCTGCTCACTCTTCACTCTATCCAATCACTCTGGCTCACTCTGTCACTCTAATCACTCTTCACTCTATCACTCTAGTCACTCTCCCCATTTCACTCTGCCTTCACTCTGAATTCACTCTAAAAAGGTCACTCTGGCATATCACTCTTCACTCTCTATCACTCTTCACTCTTCACTCTCCTAGTCACTCTACCTCACTCTGTCACTCTGGGTCACTCTGTTCACTCTCTCACTCTTGTCTATTCACTCTGAAGGGTCACTCTAGAATGTCACTCTTCACTCTCTTCACTCTTGCTGGTCACTCTTCACTCTGGATATCACTCTCTCACTCTATCACTCTCTCACTCTTCACTCTTTATTCACTCTAAGTCTCACTCTTCACTCTAGCTTCACTCTAGTAGGTCACTCTCTTCACTCTTGCGCTCACTCTTAATCTTGTGTCTCACTCTCTCACTCTCCAAGGTCACTCTGTGCTATCACTCTTCACTCTTCACTCTCCTCACTCTAGTGGTCACTCTTATCACTCTTTCACTCTAATCACTCTCTCACTCTGTCACTCTATCACTCTTGAGGTCACTCTATCACTCTTTCCGTTCACTCTTGATGTATCACTCT"
pattern = "TCACTCTTC"

#initializing empty list to store the matched positions
positions = []

#creates a loop slides window of size len(pattern) across the dna string (x-y+1)
for i in range(len(dna) - len(pattern) + 1):
    #take substring starting at I, of length equal to pattern and slide a window across the string
    if dna[i:i+len(pattern)] == pattern: 
        positions.append(i + 1) #here +1 is coz of 0 based indexing

print(" ".join(map(str, positions)))
    
